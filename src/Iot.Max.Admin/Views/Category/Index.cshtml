
@{
    ViewData["Title"] = "分类";
    Layout = "~/Views/Shared/_LayuiList.cshtml";
}

<div class="layui-card layadmin-header">
    <div class="layui-breadcrumb" lay-filter="breadcrumb" style="visibility: visible;">
        <a lay-href="">主页</a><span lay-separator="">/</span>
        <a><cite>零售电商</cite></a><span lay-separator="">/</span>
        <a><cite>分类列表</cite></a>
    </div>
</div>

<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <div class="layui-row">

                <div class="layui-col-md3">
                    <h1>分类列表</h1>
                </div>
                <div class="layui-col-md9" style="text-align:right;">
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">查询条件</label>
                            <div class="layui-input-inline">
                                <input type="text" name="search" id="txtSearch" lay-verify="required|search" placeholder="请输入关键字" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <div class="layui-input-inline" style="width:unset;">
                                <button class="layui-btn layui-btn-warm" id="btnSearch" data-type="search"><i class="layui-icon layui-icon-search"></i> 查询</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="layui-card-body">
            <table class="layui-hide" id="demo" lay-filter="test"></table>

            <script type="text/html" id="toolbarDemo">
                <div class="layui-btn-container demoTable">
                    <button class="layui-btn layui-btn-sm layui-btn-normal " lay-event="add"><i class="layui-icon layui-icon-add-circle-fine"></i> 添加</button>
                    <button class="layui-btn layui-btn-sm layui-btn-danger" lay-event="delall" data-type="getCheckData"><i class="layui-icon layui-icon-delete"></i> 删除</button>
                </div>
            </script>

            <script type="text/html" id="barDemo">
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>
            </script>
        </div>
    </div>
</div>

<div class="site-text" style="margin: 5%; display: none" id="box1" target="test123">
    <form class="layui-form layui-form-pane" onsubmit="return false" id="CategoryForm">

        <div class="layui-form-item">
            <label class="layui-form-label">父级类型</label>
            <div class="layui-input-block">
                <select name="city" lay-verify="required">
                    <option value=""></option>
                    <option value="0">北京</option>
                    <option value="1">上海</option>
                    <option value="2">广州</option>
                    <option value="3">深圳</option>
                    <option value="4">杭州</option>
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">类型名称</label>
            <div class="layui-input-block">
                <input type="text" class="layui-input" id="txtCategoryName" name="txtCategoryName">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label"> 类别排序</label>
            <div class="layui-input-block">
                <input type="text" class="layui-input" id="txtSort" name=booktypename1><br>
            </div>
        </div>
    </form>
</div>

<script>
    layui.use(['laydate', 'laypage', 'layer', 'table', 'form',], function () {
        var laydate = layui.laydate //日期
            , laypage = layui.laypage //分页
            , layer = layui.layer //弹层
            , table = layui.table //表格
            , form = layui.form
        var $ = layui.$;

        var tableIns = table.render({
            elem: '#demo'
            ,id:'test'
            , height: 520
            , url: '/layuiadmin/json/table/demo.js' //数据接口地址
            , title: '数据表'
            , page: true //开启分页
            , toolbar: '#toolbarDemo' //开启工具栏，默认值为default
            //, totalRow: true //开启合计行
            , cols: [[ //表头
                { type: 'checkbox', fixed: 'left' }
                , { field: 'id', title: 'ID', width: 80, sort: true, totalRowText: '合计：' }
                , { field: 'username', title: '用户名', }
                , { field: 'experience', title: '积分', width: 90, sort: true, totalRow: true }
                , { field: 'sex', title: '性别', width: 80, sort: true }
                , { field: 'score', title: '评分', width: 80, sort: true, totalRow: true }
                , { field: 'city', title: '城市', width: 150 }
                , { field: 'sign', title: '签名', }
                , { field: 'classify', title: '职业', width: 100 }
                , { field: 'wealth', title: '财富', width: 135, sort: true, totalRow: true }
                , { fixed: 'right', width: 165, align: 'center', toolbar: '#barDemo' }
            ]]
        });


        //监听头工具栏事件(添加及删除事件)
        table.on('toolbar(test)', function (obj) { //test对应table中的lay-filter属性
            var checkStatus = table.checkStatus(obj.config.id)
                , data = checkStatus.data; //获取选中的数据
            switch (obj.event) {
                case 'add':
                    layer.open({//弹出框
                        type: 1,
                        title: '添加类别',
                        maxmin: true,
                        shadeClose: true, //点击遮罩关闭层
                        area: ['50%', '50%'],
                        content: $('#box1'),
                        btn: ['确定', '取消'],
                        yes: function (index, layero) {//确定执行函数
                            //执行添加方法(ajax请求)
                            //根据后台返回的参数来进行判断
                            if (true) {
                                layer.alert('添加成功', { icon: 1, title: '提示' }, function (i) {
                                    layer.close(i);
                                    layer.close(index);//关闭弹出层
                                    $("#CategoryForm")[0].reset()//重置form
                                })

                                //重载表格
                                table.reload('test', {
                                    page: {
                                        curr: 1  // 重新从第 1 页开始
                                        
                                    }
                                })
                            } else {
                                layer.msg('添加失败,请勿重复添加类别')
                            }
                        }, cancel: function (index, layero) {//取消
                            $("#CategoryForm")[0].reset()//重置form  根据id
                            layer.close(index)
                        }
                    });
          
                    break;
                case 'delall':
                    if (data.length === 0) {
                        layer.msg('请选择一行');
                    } else {
                        layer.confirm('真的删除行么', function (index) {
                            //获取要删除行的id
                            var ids = [];
                            $.each(data, function (i, v) {
                                ids.push(v.id);
                            });
                            layer.msg('批量删除，可将这些id传到后台进行操作。id=' + ids.toString());
                        });
                    }
                    break;
            };
        });

        //监听行工具事件（编辑及删除事件）
        table.on('tool(test)', function (obj) { //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
            var data = obj.data //获得当前行数据
                , layEvent = obj.event; //获得 lay-event 对应的值
            if (layEvent === 'del') {
                layer.confirm('真的删除行么', function (index) {
                    layer.close(index);
                    //向服务端发送删除指令
                    layer.msg('删除,可将id传到后台进行操作。id=' + data.id);
                });
            } else if (layEvent === 'edit') {
                layer.msg('编辑操作');
            }
        });

        //查询
        $('#btnSearch').on('click', function () {
            var search = $('#txtSearch').val();

            tableIns.reload({
                where: { //设定异步数据接口的额外参数，任意设
                    search: search
                }
                , page: {
                    curr: 1 //重新从第 1 页开始
                }
            });
        });
    });
</script>